name: Conditional CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  detect-repo:
    runs-on: ubuntu-latest
    outputs:
      is-org-repo: ${{ steps.check-repo.outputs.is-org-repo }}
    steps:
      - name: Check repository
        id: check-repo
        run: |
          if [[ "${{ github.repository }}" == "Software-Design-King/WEB" ]]; then
            echo "is-org-repo=true" >> $GITHUB_OUTPUT
          else
            echo "is-org-repo=false" >> $GITHUB_OUTPUT
          fi
          echo "Current repository: ${{ github.repository }}"
  
  test:
    needs: detect-repo
    if: needs.detect-repo.outputs.is-org-repo == 'true'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
          
      - name: Install dependencies
        run: npm ci
          
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
          
      - name: Run ESLint
        run: npm run lint
        continue-on-error: true
        
      - name: Run Playwright tests
        run: npm run test
          
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
  
  build:
    needs: [detect-repo, test]
    if: |
      always() && 
      (needs.detect-repo.outputs.is-org-repo == 'false' || 
       (needs.detect-repo.outputs.is-org-repo == 'true' && needs.test.result == 'success'))
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'
          
      - name: Install dependencies
        run: npm ci
          
      - name: Build project
        run: npm run build
        env:
          VITE_API_BASE_URL: ${{ secrets.VITE_API_BASE_URL }}
          VITE_KAKAO_CLIENT_ID: ${{ secrets.VITE_KAKAO_CLIENT_ID }}
          VITE_KAKAO_REDIRECT_URL: ${{ secrets.VITE_KAKAO_REDIRECT_URL }}
      
      - name: Log build completion
        run: echo "Build completed successfully!"
